{"id":"../node_modules/is-hex-prefixed/src/index.js","dependencies":[{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\package.json","includedInParent":true,"mtime":1680032957770},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\is-hex-prefixed\\package.json","includedInParent":true,"mtime":1679715571060}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + _typeof(str) + \", while checking isHexPrefixed.\");\n  }\n  return str.slice(0, 2) === '0x';\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":2,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":4,"column":0}},{"generated":{"line":6,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":0},"name":"module"},{"generated":{"line":8,"column":6},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":6}},{"generated":{"line":8,"column":7},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":7},"name":"exports"},{"generated":{"line":8,"column":14},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":14}},{"generated":{"line":8,"column":17},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":17}},{"generated":{"line":8,"column":26},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":26},"name":"isHexPrefixed"},{"generated":{"line":8,"column":39},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":39},"name":"isHexPrefixed"},{"generated":{"line":8,"column":40},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":40},"name":"str"},{"generated":{"line":8,"column":43},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":43}},{"generated":{"line":8,"column":45},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":7,"column":45}},{"generated":{"line":9,"column":2},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":2}},{"generated":{"line":9,"column":6},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":6}},{"generated":{"line":9,"column":13},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":13},"name":"str"},{"generated":{"line":9,"column":16},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":16}},{"generated":{"line":9,"column":21},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":21}},{"generated":{"line":9,"column":29},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":29}},{"generated":{"line":9,"column":31},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":8,"column":31}},{"generated":{"line":10,"column":4},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":4}},{"generated":{"line":10,"column":10},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":10}},{"generated":{"line":10,"column":14},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":14},"name":"Error"},{"generated":{"line":10,"column":19},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":19}},{"generated":{"line":10,"column":20},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":20}},{"generated":{"line":10,"column":87},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":87}},{"generated":{"line":10,"column":90},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":87},"name":"_typeof"},{"generated":{"line":10,"column":97},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":87}},{"generated":{"line":10,"column":98},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":98},"name":"str"},{"generated":{"line":10,"column":101},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":101}},{"generated":{"line":10,"column":102},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":102}},{"generated":{"line":10,"column":105},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":105}},{"generated":{"line":10,"column":138},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":138}},{"generated":{"line":10,"column":139},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":9,"column":139}},{"generated":{"line":11,"column":2},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":10,"column":2}},{"generated":{"line":12,"column":2},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":2}},{"generated":{"line":12,"column":9},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":9},"name":"str"},{"generated":{"line":12,"column":12},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":12}},{"generated":{"line":12,"column":13},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":13},"name":"slice"},{"generated":{"line":12,"column":18},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":18}},{"generated":{"line":12,"column":19},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":19}},{"generated":{"line":12,"column":20},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":20}},{"generated":{"line":12,"column":22},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":22}},{"generated":{"line":12,"column":23},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":23}},{"generated":{"line":12,"column":24},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":24}},{"generated":{"line":12,"column":29},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":29}},{"generated":{"line":12,"column":33},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":12,"column":33}},{"generated":{"line":13,"column":0},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":1},"source":"../node_modules/is-hex-prefixed/src/index.js","original":{"line":13,"column":1}}],"sources":{"../node_modules/is-hex-prefixed/src/index.js":"/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n"},"lineCount":null}},"error":null,"hash":"6c023ac7a3ae89cbf5a0d1d44c31c5b2","cacheData":{"env":{}}}