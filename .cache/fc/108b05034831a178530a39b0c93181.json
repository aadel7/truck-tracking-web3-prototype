{"id":"../node_modules/ethereumjs-util/dist.browser/helpers.js","dependencies":[{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\dist.browser\\helpers.js.map","includedInParent":true,"mtime":1679715574674},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\src\\helpers.ts","includedInParent":true,"mtime":1679715575051},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\package.json","includedInParent":true,"mtime":1680032957770},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\package.json","includedInParent":true,"mtime":1679715574396},{"name":"./internal","loc":{"line":4,"column":25,"index":212},"parent":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\dist.browser\\helpers.js","resolved":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\dist.browser\\internal.js"},{"name":"buffer","parent":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\ethereumjs-util\\dist.browser\\helpers.js","resolved":"C:\\Users\\aadel\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar internal_1 = require(\"./internal\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nvar assertIsHexString = function assertIsHexString(input) {\n  if (!(0, internal_1.isHexString)(input)) {\n    var msg = \"This method only supports 0x-prefixed hex strings but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsHexString = assertIsHexString;\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nvar assertIsBuffer = function assertIsBuffer(input) {\n  if (!Buffer.isBuffer(input)) {\n    var msg = \"This method only supports Buffer but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsBuffer = assertIsBuffer;\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nvar assertIsArray = function assertIsArray(input) {\n  if (!Array.isArray(input)) {\n    var msg = \"This method only supports number arrays but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsArray = assertIsArray;\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nvar assertIsString = function assertIsString(input) {\n  if (typeof input !== 'string') {\n    var msg = \"This method only supports strings but input was: \".concat(input);\n    throw new Error(msg);\n  }\n};\nexports.assertIsString = assertIsString;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":17}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":25}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":37}},{"source":"../src/helpers.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":38}},{"source":"../src/helpers.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":13,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":13,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":13,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":33},"generated":{"line":13,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":13,"column":33}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":13,"column":50}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":13,"column":51}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":56},"generated":{"line":13,"column":56}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":56},"generated":{"line":13,"column":58}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":14,"column":2}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":14,"column":6}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":9}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":11}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":7},"generated":{"line":14,"column":22}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":14,"column":33}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":19},"generated":{"line":14,"column":35}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":24},"generated":{"line":14,"column":40}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":14,"column":41}},{"source":"../src/helpers.ts","name":null,"original":{"line":8,"column":27},"generated":{"line":14,"column":43}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":15,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":15,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":13},"generated":{"line":15,"column":11}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":15,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":15,"column":81}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":15,"column":82}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":15,"column":88}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":84},"generated":{"line":15,"column":89}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":89},"generated":{"line":15,"column":94}},{"source":"../src/helpers.ts","name":null,"original":{"line":9,"column":91},"generated":{"line":15,"column":95}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":16,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":16,"column":10}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":16,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":19},"generated":{"line":16,"column":19}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":16,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":23},"generated":{"line":16,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":10,"column":24},"generated":{"line":16,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":12,"column":1},"generated":{"line":18,"column":1}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":19,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":19,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":19,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":19,"column":25}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":19,"column":28}},{"source":"../src/helpers.ts","name":null,"original":{"line":7,"column":30},"generated":{"line":19,"column":45}},{"source":"../src/helpers.ts","name":null,"original":{"line":14,"column":0},"generated":{"line":20,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":7},"generated":{"line":24,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":24,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":24,"column":18}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":30},"generated":{"line":24,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":24,"column":30}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":24,"column":44}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":40},"generated":{"line":24,"column":45}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":24,"column":50}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":53},"generated":{"line":24,"column":52}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":25,"column":2}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":25,"column":6}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":7},"generated":{"line":25,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":13},"generated":{"line":25,"column":13}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":14},"generated":{"line":25,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":22},"generated":{"line":25,"column":22}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":23},"generated":{"line":25,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":28},"generated":{"line":25,"column":28}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":25,"column":29}},{"source":"../src/helpers.ts","name":null,"original":{"line":19,"column":31},"generated":{"line":25,"column":31}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":26,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":26,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":26,"column":11}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":26,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":26,"column":64}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":26,"column":65}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":26,"column":71}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":67},"generated":{"line":26,"column":72}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":72},"generated":{"line":26,"column":77}},{"source":"../src/helpers.ts","name":null,"original":{"line":20,"column":74},"generated":{"line":26,"column":78}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":27,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":10},"generated":{"line":27,"column":10}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":14},"generated":{"line":27,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":27,"column":19}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":20},"generated":{"line":27,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":27,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":21,"column":24},"generated":{"line":27,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":29,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":23,"column":1},"generated":{"line":29,"column":1}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":30,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":30,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":30,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":30,"column":22}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":30,"column":25}},{"source":"../src/helpers.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":30,"column":39}},{"source":"../src/helpers.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":31,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":7},"generated":{"line":35,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":35,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":35,"column":17}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":35,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":35,"column":29}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":35,"column":42}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":39},"generated":{"line":35,"column":43}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":54},"generated":{"line":35,"column":48}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":54},"generated":{"line":35,"column":50}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":2},"generated":{"line":36,"column":2}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":6},"generated":{"line":36,"column":6}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":7},"generated":{"line":36,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":36,"column":12}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":36,"column":13}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":36,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":36,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":36,"column":26}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":27},"generated":{"line":36,"column":27}},{"source":"../src/helpers.ts","name":null,"original":{"line":30,"column":29},"generated":{"line":36,"column":29}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":37,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":10},"generated":{"line":37,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":13},"generated":{"line":37,"column":11}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":37,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":37,"column":71}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":37,"column":72}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":37,"column":78}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":74},"generated":{"line":37,"column":79}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":79},"generated":{"line":37,"column":84}},{"source":"../src/helpers.ts","name":null,"original":{"line":31,"column":81},"generated":{"line":37,"column":85}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":38,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":38,"column":10}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":14},"generated":{"line":38,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":19},"generated":{"line":38,"column":19}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":20},"generated":{"line":38,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":23},"generated":{"line":38,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":32,"column":24},"generated":{"line":38,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":34,"column":0},"generated":{"line":40,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":40,"column":1}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":41,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":41,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":41,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":41,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":41,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":41,"column":37}},{"source":"../src/helpers.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":42,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":7},"generated":{"line":46,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":46,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":46,"column":18}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":30},"generated":{"line":46,"column":21}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":46,"column":30}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":46,"column":44}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":40},"generated":{"line":46,"column":45}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":53},"generated":{"line":46,"column":50}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":53},"generated":{"line":46,"column":52}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":47,"column":2}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":47,"column":6}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":47,"column":13}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":47,"column":18}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":47,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":31},"generated":{"line":47,"column":31}},{"source":"../src/helpers.ts","name":null,"original":{"line":41,"column":33},"generated":{"line":47,"column":33}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":48,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":48,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":13},"generated":{"line":48,"column":11}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":48,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":48,"column":65}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":48,"column":66}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":48,"column":72}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":68},"generated":{"line":48,"column":73}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":73},"generated":{"line":48,"column":78}},{"source":"../src/helpers.ts","name":null,"original":{"line":42,"column":75},"generated":{"line":48,"column":79}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":49,"column":4}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":49,"column":10}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":14},"generated":{"line":49,"column":14}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":49,"column":19}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":49,"column":20}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":23},"generated":{"line":49,"column":23}},{"source":"../src/helpers.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":49,"column":24}},{"source":"../src/helpers.ts","name":null,"original":{"line":45,"column":0},"generated":{"line":51,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":45,"column":1},"generated":{"line":51,"column":1}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":52,"column":0}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":52,"column":7}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":13},"generated":{"line":52,"column":8}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":52,"column":22}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":52,"column":25}},{"source":"../src/helpers.ts","name":null,"original":{"line":40,"column":27},"generated":{"line":52,"column":39}}],"sources":{"../src/helpers.ts":"import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"6297fb83fd5a4669cbb9b495e5bbcafa","cacheData":{"env":{}}}