{"id":"../node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","dependencies":[{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\anonymous.js.map","includedInParent":true,"mtime":1679715574838},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\anonymous.ts","includedInParent":true,"mtime":1679715575411},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\package.json","includedInParent":true,"mtime":1680032957770},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\package.json","includedInParent":true,"mtime":1679715574588},{"name":"./abstract-coder","loc":{"line":2,"column":22,"index":36},"parent":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\anonymous.js","resolved":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\abstract-coder.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnonymousCoder = void 0;\nvar _abstractCoder = require(\"./abstract-coder\");\n// Clones the functionality of an existing Coder, but without a localName\nclass AnonymousCoder extends _abstractCoder.Coder {\n  constructor(coder) {\n    super(coder.name, coder.type, undefined, coder.dynamic);\n    this.coder = coder;\n  }\n  defaultValue() {\n    return this.coder.defaultValue();\n  }\n  encode(writer, value) {\n    return this.coder.encode(writer, value);\n  }\n  decode(reader) {\n    return this.coder.decode(reader);\n  }\n}\nexports.AnonymousCoder = AnonymousCoder;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":12},"generated":{"line":1,"column":12}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":6}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":7}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":29}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":4,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":4,"column":7}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":5,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":7}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":8}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":18}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":28}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":6},"generated":{"line":9,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":9,"column":6}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":9,"column":20}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":36},"generated":{"line":9,"column":29}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":9,"column":49}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":6,"column":41},"generated":{"line":9,"column":50}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":10,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":10,"column":13}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":10,"column":14}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":10,"column":19}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":9,"column":28},"generated":{"line":10,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":11,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":13},"generated":{"line":11,"column":9}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":11,"column":10}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":19},"generated":{"line":11,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":11,"column":16}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":24},"generated":{"line":11,"column":20}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":11,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":31},"generated":{"line":11,"column":27}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":32},"generated":{"line":11,"column":28}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":36},"generated":{"line":11,"column":32}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":38},"generated":{"line":11,"column":34}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":47},"generated":{"line":11,"column":43}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":49},"generated":{"line":11,"column":45}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":54},"generated":{"line":11,"column":50}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":55},"generated":{"line":11,"column":51}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":62},"generated":{"line":11,"column":58}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":10,"column":63},"generated":{"line":11,"column":59}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":12,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":12,"column":8}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":12,"column":9}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":18},"generated":{"line":12,"column":14}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":12,"column":17}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":11,"column":26},"generated":{"line":12,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":13,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":14,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":14,"column":14}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":14,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":14,"column":17}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":15,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":15},"generated":{"line":15,"column":11}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":19},"generated":{"line":15,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":20},"generated":{"line":15,"column":16}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":25},"generated":{"line":15,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":26},"generated":{"line":15,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":38},"generated":{"line":15,"column":34}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":15,"column":40},"generated":{"line":15,"column":36}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":16,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":17,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":10},"generated":{"line":17,"column":8}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":11},"generated":{"line":17,"column":9}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":25},"generated":{"line":17,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":27},"generated":{"line":17,"column":17}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":37},"generated":{"line":17,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":18,"column":37},"generated":{"line":17,"column":24}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":18,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":15},"generated":{"line":18,"column":11}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":19},"generated":{"line":18,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":20},"generated":{"line":18,"column":16}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":18,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":26},"generated":{"line":18,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":32},"generated":{"line":18,"column":28}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":18,"column":29}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":39},"generated":{"line":18,"column":35}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":41},"generated":{"line":18,"column":37}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":46},"generated":{"line":18,"column":42}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":19,"column":47},"generated":{"line":18,"column":43}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":19,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":20,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":22,"column":10},"generated":{"line":20,"column":8}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":22,"column":11},"generated":{"line":20,"column":9}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":22,"column":25},"generated":{"line":20,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":22,"column":25},"generated":{"line":20,"column":17}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":21,"column":4}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":21,"column":11}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":21,"column":15}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":20},"generated":{"line":21,"column":16}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":25},"generated":{"line":21,"column":21}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":21,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":32},"generated":{"line":21,"column":28}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":33},"generated":{"line":21,"column":29}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":39},"generated":{"line":21,"column":35}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":23,"column":40},"generated":{"line":21,"column":36}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":22,"column":2}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":0}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":7}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":8}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":22}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":25}},{"source":"../../src.ts/coders/anonymous.ts","name":null,"original":{"line":25,"column":1},"generated":{"line":24,"column":39}}],"sources":{"../../src.ts/coders/anonymous.ts":"\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"a71a68a2f519f6b2b83e74d7bbbb2fd5","cacheData":{"env":{}}}