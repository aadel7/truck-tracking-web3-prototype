{"id":"../node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","dependencies":[{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\boolean.js.map","includedInParent":true,"mtime":1679715574922},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\boolean.ts","includedInParent":true,"mtime":1679715575424},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\package.json","includedInParent":true,"mtime":1680032957770},{"name":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\package.json","includedInParent":true,"mtime":1679715574588},{"name":"./abstract-coder","loc":{"line":2,"column":22,"index":36},"parent":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\boolean.js","resolved":"C:\\Users\\aadel\\Desktop\\Programming\\Solidity Project\\node_modules\\@ethersproject\\abi\\lib.esm\\coders\\abstract-coder.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanCoder = void 0;\nvar _abstractCoder = require(\"./abstract-coder\");\nclass BooleanCoder extends _abstractCoder.Coder {\n  constructor(localName) {\n    super(\"bool\", \"bool\", localName, false);\n  }\n  defaultValue() {\n    return false;\n  }\n  encode(writer, value) {\n    return writer.writeValue(value ? 1 : 0);\n  }\n  decode(reader) {\n    return reader.coerce(this.type, !reader.readValue().isZero());\n  }\n}\nexports.BooleanCoder = BooleanCoder;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":12},"generated":{"line":1,"column":12}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":6}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":7}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":21}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":22}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":3,"column":29}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":4,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":4,"column":7}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":5,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":7}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":8}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":1,"column":13},"generated":{"line":6,"column":20}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":18}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":21}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":28}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":8,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":8,"column":6}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":26},"generated":{"line":8,"column":18}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":34},"generated":{"line":8,"column":27}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":8,"column":47}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":8,"column":48}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":9,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":9,"column":13}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":16},"generated":{"line":9,"column":14}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":33},"generated":{"line":9,"column":23}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":7,"column":33},"generated":{"line":9,"column":25}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":10,"column":4}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":10,"column":9}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":10,"column":10}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":20},"generated":{"line":10,"column":16}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":10,"column":18}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":28},"generated":{"line":10,"column":24}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":30},"generated":{"line":10,"column":26}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":39},"generated":{"line":10,"column":35}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":41},"generated":{"line":10,"column":37}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":46},"generated":{"line":10,"column":42}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":8,"column":47},"generated":{"line":10,"column":43}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":11,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":12,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":12,"column":14}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":12,"column":15}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":12,"column":17}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":13,"column":4}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":13,"column":11}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":12,"column":20},"generated":{"line":13,"column":16}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":14,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":15,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":10},"generated":{"line":15,"column":8}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":15,"column":9}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":25},"generated":{"line":15,"column":15}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":27},"generated":{"line":15,"column":17}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":41},"generated":{"line":15,"column":22}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":15,"column":41},"generated":{"line":15,"column":24}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":16,"column":4}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":15},"generated":{"line":16,"column":11}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":21},"generated":{"line":16,"column":17}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":16,"column":18}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":32},"generated":{"line":16,"column":28}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":33},"generated":{"line":16,"column":29}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":38},"generated":{"line":16,"column":34}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":41},"generated":{"line":16,"column":37}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":42},"generated":{"line":16,"column":38}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":44},"generated":{"line":16,"column":41}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":45},"generated":{"line":16,"column":42}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":16,"column":46},"generated":{"line":16,"column":43}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":17,"column":4},"generated":{"line":17,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":4},"generated":{"line":18,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":10},"generated":{"line":18,"column":8}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":11},"generated":{"line":18,"column":9}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":18,"column":15}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":18,"column":17}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":19,"column":4}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":19,"column":11}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":19,"column":17}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":19,"column":18}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":28},"generated":{"line":19,"column":24}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":29},"generated":{"line":19,"column":25}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":33},"generated":{"line":19,"column":29}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":34},"generated":{"line":19,"column":30}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":38},"generated":{"line":19,"column":34}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":40},"generated":{"line":19,"column":36}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":41},"generated":{"line":19,"column":37}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":47},"generated":{"line":19,"column":43}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":48},"generated":{"line":19,"column":44}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":57},"generated":{"line":19,"column":53}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":59},"generated":{"line":19,"column":55}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":60},"generated":{"line":19,"column":56}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":66},"generated":{"line":19,"column":62}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":68},"generated":{"line":19,"column":64}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":20,"column":69},"generated":{"line":19,"column":65}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":20,"column":2}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":0}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":7}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":8}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":20}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":23}},{"source":"../../src.ts/coders/boolean.ts","name":null,"original":{"line":22,"column":1},"generated":{"line":22,"column":35}}],"sources":{"../../src.ts/coders/boolean.ts":"\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n"},"lineCount":null}},"error":null,"hash":"31508279782ac7095326ae95b5545948","cacheData":{"env":{}}}