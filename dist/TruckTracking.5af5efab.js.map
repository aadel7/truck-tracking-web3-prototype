{"version":3,"sources":["TruckTracking.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","web3","Web3","contractAddress","privateKey","fromAddress","contractABI","contractInstance","eth","Contract","initContract","_initContract","_callee2","accounts","account","_callee2$","_context2","getAccounts","console","log","concat","t0","getShipmentData","_x","_getShipmentData","_callee3","shipmentId","shipmentData","_callee3$","_context3","methods","getShipment","updateShipment","_x2","_x3","_x4","_x5","_updateShipment","_callee4","newOrigin","newDestination","newCarrier","gasEstimate","_callee4$","_context4","estimateGas","from","send","gas","createShipment","_x6","_x7","_x8","_createShipment","_callee5","origin","destination","carrier","_callee5$","_context5","window","TruckTracking","_callee","_callee$","_context"],"mappings":"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","file":"TruckTracking.5af5efab.js","sourceRoot":"..\\public","sourcesContent":["const web3 = new Web3('http://127.0.0.1:7545');\r\n\r\n// Se obtiene al realizar el deployment del Smart Contract en Remix IDE.\r\nconst contractAddress = '0x5aD2e55951b8c03b16426d92feeE1073632c979c';\r\n\r\n// Se obtienen de Ganache\r\nconst privateKey = '0x72aa9293caf3505651584a4fd2b244a19ce0146a7a05926e1d4ebdbf6aadf76c';\r\nconst fromAddress = '0x62f3A2D540374B98345354B6163f765892B8F2a9';\r\n\r\n// Se obtiene al compilar el Smart Contract en Remix IDE\r\nconst contractABI = [\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"shipmentId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"origin\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"destination\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"carrier\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"ShipmentCreated\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_origin\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_destination\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_carrier\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"createShipment\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_shipmentId\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"getShipment\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"shipmentId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"origin\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"destination\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"carrier\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getShipmentCounter\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"shipmentCounter\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"shipments\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"shipmentId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"timestamp\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"origin\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"destination\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"carrier\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_shipmentId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_newOrigin\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_newDestination\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"_newCarrier\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"updateShipment\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n];\r\n\r\n\r\nconst contractInstance = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\nasync function initContract() {\r\n  try {\r\n    // Obtiene las cuentas disponibles en el proveedor\r\n    const accounts = await web3.eth.getAccounts();\r\n\r\n    // Selecciona la primera cuenta disponible\r\n    const account = accounts[0];\r\n\r\n    console.log(`Cuenta usada: ${account}`);\r\n\r\n  } catch (error) {\r\n    console.error(\"Error al inicializar el contrato:\", error);\r\n  }\r\n}\r\n\r\ninitContract();\r\n\r\nasync function getShipmentData(shipmentId) {\r\n  try {\r\n    const shipmentData = await contractInstance.methods.getShipment(shipmentId).call();\r\n    console.log('Shipment data:', shipmentData);\r\n  } catch (error) {\r\n    console.error('Error al obtener los datos del shipment:', error);\r\n  }\r\n}\r\n\r\nasync function updateShipment(shipmentId, newOrigin, newDestination, newCarrier) {\r\n    try {\r\n        const gasEstimate = await contractInstance.methods\r\n            .updateShipment(shipmentId, newOrigin, newDestination, newCarrier)\r\n            .estimateGas({ from: fromAddress });\r\n\r\n        const result = await contractInstance.methods\r\n            .updateShipment(shipmentId, newOrigin, newDestination, newCarrier)\r\n            .send({\r\n                from: fromAddress,\r\n                gas: gasEstimate,\r\n            });\r\n\r\n        console.log(\"Transacción exitosa:\", result);\r\n    } catch (error) {\r\n        console.error(\"Error al actualizar el envío:\", error);\r\n    }\r\n}\r\n\r\n\r\n// Ejemplo de llamada a una función que modifica el estado del contrato (transacción)\r\nasync function createShipment(origin, destination, carrier) {\r\n    try {\r\n      const gasEstimate = await contractInstance.methods\r\n        .createShipment(origin, destination, carrier)\r\n        .estimateGas({ from: fromAddress });\r\n  \r\n      const result = await contractInstance.methods\r\n        .createShipment(origin, destination, carrier)\r\n        .send({\r\n          from: fromAddress,\r\n          gas: gasEstimate,\r\n        });\r\n  \r\n      console.log(\"Transacción exitosa:\", result);\r\n    } catch (error) {\r\n      console.error(\"Error al crear el envío:\", error);\r\n    }\r\n  }\r\n\r\n  // ...\r\n// ...\r\n\r\nwindow.TruckTracking = {\r\n    createShipment,\r\n    updateShipment,\r\n    getShipmentData,\r\n    initContract,\r\n  };\r\n  \r\n\r\n  // Uso de la función para obtener los datos de un shipment\r\n(async () => {\r\n    const shipmentId = 1; // Reemplaza con el ID del shipment que deseas consultar\r\n    await getShipmentData(1);\r\n  })();\r\n  \r\n//   // Uso de la función para crear un envío\r\n//   (async () => {\r\n//     const origin = \"New York\";\r\n//     const destination = \"Los Angeles\";\r\n//     const carrier = \"FedEx\";\r\n  \r\n//     await createShipment(origin, destination, carrier);\r\n//     })();\r\n  \r\n//   // Uso de la función para modificar un envío\r\n//   (async () => {\r\n\r\n//   const shipmentId = 1;\r\n//   const newOrigin = 'New Origin';\r\n//   const newDestination = 'New Destination';\r\n//   const newCarrier = 'New Carrier';\r\n  \r\n//   updateShipment(shipmentId, newOrigin, newDestination, newCarrier); \r\n//     })();"]}